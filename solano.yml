system:
  docker: true
environment:
  'DOCKER_APP': 'ci_memes'
  'DEPLOY_AWS_ECS': 'true'
  'AWS_ECS_CLUSTER': 'default'
  'AWS_ECS_SERVICE': 'ci_memes-service'
  'AWS_ECS_TASK_DEFINITION': 'ci_memes'
  # For sensitive values, use `solano config:add repo <key> <value>` from the cli
  # See: http://docs.solanolabs.com/Setup/setting-environment-variables/#via-config-variables
  # 'DOCKER_USER': '<set-with-cli>'
  # 'DOCKER_EMAIL': '<set-with-cli>'
  # 'DOCKER_PASSWORD': '<set-with-cli>'
  # 'AWS_ACCESS_KEY_ID': '<set-with-cli>'
  # 'AWS_SECRET_ACCESS_KEY': '<set-with-cli>'
  # 'AWS_DEFAULT_REGION': '<set-with-cli>'

timeout_hook: 900

hooks:
  pre_setup: |
    set -e # #xit on error
    ./scripts/solano-docker_build.sh
    # Create test database SQL
    grep -v ^"CREATE DATABASE " create-db.sql | grep -v ^"USE " > create-test-db.sql
    cp ~/results/$TDDIUM_SESSION_ID/session/hook-pre_setup0.log ~/pre_setup.log
  worker_setup: |
    set -e # #xit on error
    ./scripts/solano-docker_start.sh
    composer install
    printenv
    cat create-test-db.sql
    mysql -u$TDDIUM_DB_USER -p$TDDIUM_DB_PASSWORD $TDDIUM_DB_NAME < create-test-db.sql

php:
  php_version: "5.6"

mysql:
  adapter: 'mysql2'
tests:
  - type: phpunit
    mode: parallel
    command: ./vendor/bin/solano-phpunit
    config: phpunit.xml
    files:
      - tests/**_test.php
      
profiles:
  read:  
    tests:
      - test `grep -c '[I]mage is up to date for' ~/pre_setup.log` -gt 0
      - type: phpunit
        mode: parallel
        command: ./vendor/bin/solano-phpunit
        config: phpunit.xml
        files:
          - tests/**_test.php
  write:  
    tests:
      - test `grep -c '[I]mage is up to date for' ~/pre_setup.log` -eq 0
      - type: phpunit
        mode: parallel
        command: ./vendor/bin/solano-phpunit
        config: phpunit.xml
        files:
          - tests/**_test.php
      
